include: 
  - local: qemu-build-deploy.yml


build-qemu:
  # .build
    # - packer plugins install github.com/hashicorp/qemu
    # - packer plugins install github.com/hashicorp/virtualbox
    # - packer plugins install github.com/hashicorp/vagrant
  
  # custom script
  # - packer build -only=qemu $NAME.json
  # - gitlab-tofu destroy
  # - gitlab-tofu plan -target=module.topology.openstack_images_image_v2.test_image
  # - gitlab-tofu apply
  
  #  variables from 
  # - .terraform-build, 
    #   TF_ROOT: ${CI_PROJECT_DIR}
    # TF_STATE_NAME: ${CI_COMMIT_REF_SLUG}
    # TF_VAR_CI_SERVER_HOST: ${CI_SERVER_HOST}
    # TF_VAR_CI_COMMIT_SHORT_SHA: ${CI_COMMIT_SHORT_SHA}
  # - deploy-qemu
    # KEY: "qemu"
    # OS_AUTH_TYPE: "v3applicationcredential"
    # OS_AUTH_URL: "https://identity.cloud.muni.cz/v3"
    # OS_IDENTITY_API_VERSION: "3"
    # OS_INTERFACE: "public"
    # OS_REGION_NAME: "brno1"
  # - test-qemu
    # TF_VAR_NAME: ${NAME}
    # TF_VAR_TYPE: ${TYPE}
    # TF_VAR_DISTRO: ${DISTRO}
    # TF_VAR_GUI_ACCESS: ${GUI_ACCESS}
    # TF_VAR_ACCESS_TOKEN: ${ACCESS_TOKEN}

test-qemu:
  needs:
    - build-qemu
  steps:
    # .terraform-build
      # - gitlab-tofu plan
      # - gitlab-tofu apply || (gitlab-tofu output ; exit 1)
      # and some shit with artifactos

deploy-qemu:
  needs: ["build-qemu", "test-qemu"]
  # TODO .get-version-from-changelog
  
  # - mkdir -p target-qemu
  #  - openstack image save --file "target-qemu/$NAME" "$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"

  # TODO .upload-image-to-openstack

  #    - HEAD_IMAGE_ID=$(openstack image show --column id --format value $CI_PROJECT_NAME-$VERSION)
  #  # If previous image version exists, delete it or rename it. Once all our images follow the latest naming convention, this block can be simplified
  #  - if openstack image show $CI_PROJECT_NAME > /dev/null; then
  #  -   PREV_VERSION=$(openstack image show $CI_PROJECT_NAME --column properties --format json | jq '.properties."owner_specified.openstack.version"' -re) || PREV_VERSION=0.1.0
  #  -   if openstack image show $CI_PROJECT_NAME-$PREV_VERSION > /dev/null; then
  #  -     openstack image delete $CI_PROJECT_NAME || openstack image set $CI_PROJECT_NAME --name $CI_PROJECT_NAME-DEPRECATED
  #  -   else
  #  -     openstack image set $CI_PROJECT_NAME --name $CI_PROJECT_NAME-$PREV_VERSION
  #  -   fi
  #  - fi
  #  - openstack image set $CI_PROJECT_NAME-$VERSION --name $CI_PROJECT_NAME


  # TODO .upload-image-to-openstack

  # STABLE_IMAGE_ID=$(openstack image show --column id --format value $CI_PROJECT_NAME-$VERSION)

  # TODO .git-tag

#  # Share the image to other OpenStack projects
#    - while read -r PROJECT_ID; do
#    -   openstack image add project $HEAD_IMAGE_ID $PROJECT_ID
#    -   openstack image add project $STABLE_IMAGE_ID $PROJECT_ID
#    - done < <(echo $APPLICATION_CREDENTIALS | jq -r '.[] | .project_id')
#    # Accept the sharing from each project
#    - while read -r APP_ID && read -r APP_SECRET; do
#    -   OS_APPLICATION_CREDENTIAL_ID=$APP_ID
#    -   OS_APPLICATION_CREDENTIAL_SECRET=$APP_SECRET
#    -   openstack image set --accept $HEAD_IMAGE_ID
#    -   openstack image set --accept $STABLE_IMAGE_ID
#    - done < <(echo $APPLICATION_CREDENTIALS | jq -r '.[] | (.app_cred_id, .app_cred_secret)')
#    - if [ $TYPE != "windows" ]; then
#    -   TODO !reference [.upload-image-to-openstack-object-store, script]
#    - fi


test-qemu-cleanup:
  steps:
    # TODO test-qemu
    # TODO .terraform-destroy

