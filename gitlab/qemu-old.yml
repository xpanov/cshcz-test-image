include: qemu-build-deploy.yml

build-qemu:
  script:
    - packer build -only=qemu $NAME.json
  artifacts:
    paths:
      - target-qemu/*

deploy-qemu:
  before_script:
   - !reference [.get-version-from-changelog, script]

test-qemu:
  stage: test
  script:
    # Generate keys and provide them via a disk to cloud-init
    - ssh-keygen -f ./id_rsa -N "" -C mykey
    - mkdir -p drive/openstack/latest
    - echo "{\"uuid\":\"d8e02d56-2648-49a3-bf97-6be8f1204f38\", \"public_keys\":{\"mykey\":\"`cat id_rsa.pub`\"}}" > drive/openstack/latest/meta_data.json
    - mkisofs -R -J -V config-2 -o config.img drive/
    # Run the VM, run Ansible
    - qemu-system-x86_64 -accel kvm -m size=4096 --smp 4 -device nec-usb-xhci,id=usb,bus=pci.0,addr=0x4 -device usb-tablet -net nic -net user,hostfwd=tcp::2222-:22 -cdrom config.img target-qemu/* &
    - echo "ssh ansible_user=$DISTRO ansible_port=2222 ansible_host=127.0.0.1 ansible_connection=ssh" > inventory
    - ANSIBLE_HOST_KEY_CHECKING=false ansible-playbook --private-key id_rsa -i inventory --ssh-extra-args "-o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ControlMaster=auto -o ControlPersist=60s" --timeout=30 -v playbook.yml
  resource_group: virtual-machine
  needs: ["build-qemu"]
  tags:
    - image-builder

deploy-qemu-test:
  extends: deploy-qemu
  before_script:
    - VERSION=$CI_COMMIT_SHORT_SHA
  script: !reference [.upload-image-to-openstack, script]
  needs: ["build-qemu"]
  only: {}

.test-qemu-windows:
  script:
    - ssh-keygen -f ./id_rsa -N "" -C mykey -m pem
    - mkdir -p drive/openstack/latest
    - echo "{\"admin_pass\":\"Vagrant123\", \"uuid\":\"d8e02d56-2648-49a3-bf97-6be8f1204f38\", \"public_keys\":{\"mykey\":\"`cat id_rsa.pub`\"}}" > drive/openstack/latest/meta_data.json
    - printf "distinguished_name = req_distinguished_name\n[req_distinguished_name]\n[v3_req_client]\nextendedKeyUsage = clientAuth\nsubjectAltName = otherName:1.3.6.1.4.1.311.20.2.3;UTF8:$DISTRO@localhost\n" > openssl.conf
    - OPENSSL_CONF=openssl.conf openssl req -x509 -nodes -days 3650 -new -key id_rsa -out drive/openstack/latest/user_data -outform PEM -subj "/CN=$DISTRO" -extensions v3_req_client
    - mkisofs -R -J -V config-2 -o config.img drive/
    - qemu-system-x86_64 -accel kvm -m size=4096 --smp 4 -device nec-usb-xhci,id=usb,bus=pci.0,addr=0x4 -device usb-tablet -net nic -net user,hostfwd=tcp::2222-:22,hostfwd=tcp::55986-:5986 -cdrom config.img target-qemu/* &
    - printf "winrm ansible_user=$DISTRO ansible_port=55986 ansible_host=127.0.0.1 ansible_connection=winrm ansible_winrm_server_cert_validation=ignore ansible_winrm_cert_pem=drive/openstack/latest/user_data ansible_winrm_cert_key_pem=id_rsa ansible_winrm_transport=certificate\nssh ansible_user=$DISTRO ansible_port=2222 ansible_host=127.0.0.1 ansible_connection=ssh ansible_shell_type=powershell" > inventory
    - ANSIBLE_HOST_KEY_CHECKING=false ansible-playbook --private-key id_rsa -i inventory --ssh-extra-args "-o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -o ControlMaster=auto -o ControlPersist=60s" --timeout=30 -v playbook.yml
